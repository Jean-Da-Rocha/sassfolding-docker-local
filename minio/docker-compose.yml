services:
  minio:
    container_name: ${COMPOSE_PROJECT_NAME}-minio
    environment:
      MINIO_API_PORT_NUMBER: ${MINIO_API_PORT}
      MINIO_BROWSER_REDIRECT_URL: ${MINIO_CONSOLE_URL}
      MINIO_CONSOLE_PORT_NUMBER: ${MINIO_CONSOLE_PORT}
      MINIO_DEFAULT_BUCKETS: ${AWS_BUCKET}:${AWS_BUCKET_POLICY:-private}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_SERVER_URL: ${AWS_ENDPOINT}
    healthcheck:
      retries: 3
      start_period: 10s
      test: ["CMD", "mc", "ready", "local"]
      timeout: 3s
    image: bitnami/minio:${MINIO_VERSION}
    labels:
      - "traefik.enable=true"
      # MinIO Api / Storage
      - "traefik.http.routers.storage-${COMPOSE_PROJECT_NAME}.entrypoints=https"
      - "traefik.http.routers.storage-${COMPOSE_PROJECT_NAME}.rule=Host(`storage.${COMPOSE_PROJECT_NAME}.test`)"
      - "traefik.http.routers.storage-${COMPOSE_PROJECT_NAME}.service=storage-${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.storage-${COMPOSE_PROJECT_NAME}.tls=true"
      - "traefik.http.services.storage-${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=${MINIO_API_PORT}"
      # MinIO Console / Dashboard
      - "traefik.http.routers.minio-${COMPOSE_PROJECT_NAME}.entrypoints=https"
      - "traefik.http.routers.minio-${COMPOSE_PROJECT_NAME}.rule=Host(`minio.${COMPOSE_PROJECT_NAME}.test`)"
      - "traefik.http.routers.minio-${COMPOSE_PROJECT_NAME}.service=minio-${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.minio-${COMPOSE_PROJECT_NAME}.tls=true"
      - "traefik.http.services.minio-${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=${MINIO_CONSOLE_PORT}"
    networks:
      - laravel
    volumes:
      - minio-data:/bitnami/minio/data

volumes:
  minio-data:
    name: ${COMPOSE_PROJECT_NAME}-minio-data
